<tei xmlns="http://www.tei-c.org/ns/1.0"><teiHeader><fileDesc xml:id="PMC5054038" /><encodingDesc><appInfo><application version="0.5.6-SNAPSHOT" ident="GROBID" when="2019-07-12T00:10+0000"><ref target="https://github.com/kermitt2/grobid">A machine learning software for extracting information from scholarly documents</ref></application></appInfo></encodingDesc></teiHeader>
<text xml:lang="en">
<p>Studies on high-t hroughput global gene expression using microarray technology </p>

<p>have generated ever larger amounts of systematic transcriptome data. A major </p>

<p>challenge in exploiting these heterogeneous datasets is how to normalize the expres-</p>

<p>sion profiles by inter-assay methods. Different non-linear and linear normalization </p>

<p>methods have been developed, which essentially rely on the hypothesis that the 
true or perceived logarithmic fold-change distributions between two different assays 
are symmetric in nature. However, asymmetric gene expression changes are fre-
quently observed, leading to suboptimal normalization results and in consequence 
potentially to thousands of false calls. Therefore, we have specifically investigated 
asymmetric comparative transcriptome profiles and developed the normalization 
using weighted negative second order exponential error functions (NeONORM) for 
robust and global inter-assay normalization. NeONORM efficiently damps true 
gene regulatory events in order to minimize their misleading impact on the nor-
malization process. We evaluated NeONORM's applicability using artificial and 
true experimental datasets, both of which demonstrated that NeONORM could be 
systematically applied to inter-assay and inter-condition comparisons. </p>

<p>Studying the cellular transcriptome and its dynamics 
using microarray technology has become a common 
application in modern biomedical research ( 1 ), and 
has spurred over the past two decades many novel 
insights into the mechanisms of gene regulation and 
physiopathology (2-5). Microarray technology has 
seen considerable advances in the number of tran-
scripts that can be detected simultaneously as well as 
the precision of the measurement. Several all-in-one 
commercial solutions and a multitude of array scanner 
systems in the public domain have emerged. However, 
these technologic solutions often diverge in the design 
of the probes and the method of transcript detection, 
making the statistical analysis of transcriptome data 
challenging and non-uniform ( 6 , 7). Microarray tech-
nology cannot be used for absolute but only relative </p>

<p>*Corresponding author. 
Email: arndtQihes.fr </p>

<p>90 
Geno. Prot. Bioinfo. </p>

<p>quantification of the abundance of individual tran-
scripts (8). Obviously, this fact greatly complicates 
the successful analysis of microarray experiments. As </p>

<p>for inter-assay comparisons, which hence need to be 
carried out for relative quantification between two 
different biologic samples, efficient and accurate nor-
malization methods have to be developed (9-11). 
In the first step, intra-assay normalization meth-
ods account for variations in print-tip quality, irregu-
lar sample distribution over the array surface, irreg-
ularities in the surface itself, camera aperture related 
distortions, non-linear detection-dye dynamic ranges, 
and (depending on the technology used) many other 
phenomena that contribute to technical variations for </p>

<p>individual probes (1 0,12 , 13). Then, inter-assay nor-</p>

<p>malization techniques in the optimal case capture 
technical variations (which are due to sample prepa-
ration, extraction, amount, or labeling), quality vari-
ations, dye related differences (2 dye setup) and vari-</p>

<p>Vol. 4 No. 2 2006 </p>

<p>This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/). </p>

<p>Noth et al. </p>

<p>ations, chemical batch variations, array batch varia-
tions, and so on. If intra-array normalization methods 
have been successfully applied before, inter-assay nor-
malization techniques usually require a global rescal-
ing of the entire datasets relative to each other and </p>

<p>thus are of homogenous nature (11 , 14). </p>

<p>Many of the non-linear and basically all linear nor-
malization methods thereby make two assumptions </p>

<p>about the nature of the data: (I) invariance in the </p>

<p>absolute quantity of a majority of transcripts, and (2) 
symmetry of the probe variation distribution (9-14). 
Note that normalization methods are based solely 
on control probes for which synthetic transcripts are 
added at different moments during the experimenta-
tion, assuming analogously invariance and symmetry 
of the control signals. Since solely internal control 
based normalization fails to capture sample related 
technical variation and is not very robust, it is rarely 
used by itself. The first invariance assumption for 
the majority of probes, in the limit of large probe 
sets, seems to hold and can be biologically justified. 
Furthermore, this assumption is necessarily required 
for the principle of inter-assay normalization based on 
probe signals to be meaningful. The second assump-
tion about symmetry of the probe variation distribu-
tion, which is exploited in non-discriminant averaging 
normalizations, cannot be justified from a biological 
point of view. This assumption only holds true for 
technical replicates generated from a single biologic 
sample. 
Biological questions frequently pose concern about 
the dynamics in the transcriptome profile when com-
paring two different states of cell differentiation (15), 
or the differences and/or similarities between a phys-
iologic and a pathologic state of a cell ( 1 6 ) . When 
comparing distinct physiologic situations, the sym-
metry assumption seems to be poorly reflecting bi-</p>

<p>ological reality. A multitude of biologic processes can </p>

<p>be cited that will consequently lead to asymmetric 
changes in the expression profile of a cell. For in-
stance, inherently asymmetric processes such as apop-
tosis or mitotic repression will lead to a majority of 
genes being down-regulated and only a comparatively 
small fraction being induced (17,18). Furthermore, 
due to their very different mechanistic nature, tran-
scription activation and repression mechanisms follow 
distinct dynamics. Consequently, such asymmetries 
are frequently observed in "real world" data ( 19, 20). 
Since these asymmetries are not corrected in tech-
nical and/or biological replicates, they reflect true 
biological variations. Most inter-assay normakmtion </p>

<p>Geno. Prot. Bioinfo. </p>

<p>methods do not account for such asymmetries and use 
non-discriminant averaging (mean, median) for nor-
malization of these data. It is obvious that averag-
ing methods, provided the asymmetry is of sufficient 
significance to exceed numerical precision, will lead 
to suboptimal normalization factor estimation. Such 
considerations, especially in the case of the so-called 
boutique arrays where the invariance assumption can-
not be made, have lead to the development of discrim-
inant normalization methods (21,22). Here, only ei-
ther pre-defined or conditionally determined subsets 
of probes are used for the normalization process. For 
the former, either the so-called house-keeping genes 
that are thought to be invariant in their expression 
across a large number of cellular conditions, or exter-
nal and synthetic probe/target pairs are added to the 
experimental pipeline at different points in time, and 
then are considered for normalization. However, such 
methods have significant disadvantages. The notion 
of a house-keeping gene is at best empiric and often 
circumstantial (23). Dynamic determination (no a 
priori assumptions made) of the probes to be con-
sidered for normalization could be a solution to this 
problem. Unfortunately, few methods exist for such 
a type of inter-assay normalization (22,24 ). Those 
methods, however, are either expression rank-based 
(22, 25-27), or depend on Statistical tests that are 
performed after inter-assay comparison/subtraction </p>

<p>profiles have been calculated (14 ). Especially in view </p>

<p>of the increasing sensitivity of some microarray so-
lutions, analysis methods that do not or only par-
tially consider information on individual signal vari-
ance, will lead to suboptimal statistical interpretation 
of the transcriptome data (9). 
While analyzing high-density kinetic transcrip-
tome data for myeloid cell differentiation, we 
have realized that the asymmetries in the probe 
variance distributions did significantly compromise 
the median-based inter-assay normalization. We 
employed the novel AB1700 platform (Product 
Info: http://www.appliedbiosystems.com) for tran-
scriptome analysis. As detailed in Materials and 
Methods, several non-linear and linear intra-assay 
normalization techniques were systematically and 
automatically applied during the primary analy-
sis of raw image data. The resulting probe sig-
nal estimates were considered sufficiently normal-
ized to directly proceed with inter-assay compar-</p>

<p>isons (http://www.appliedbiosystems.com) . How-</p>

<p>ever, when carefully analyzing the phenomenon of 
asymmetric probe variance distributions, we realized </p>

<p>Vol. 4 No. 2 2006 </p>

<p>
NeONORM for Inter-assay Normalization </p>

<p>_ _ _~ ~-</p>

<p>_ _ _ _ </p>

<p>_____-</p>

<p>that additional means of inter-assay normalization 
were required. F'urthermore, after carefully review-
ing the literature as well as the data generated by 
a different technology, we realized that this problem 
seems to be not limited to a particular technology or 
biologic model (19,20). Unsatisfied with existing so-</p>

<p>lutions to the normalization problem, we developed 
a novel method, namely NeONORM, for inter-assay 
normalization that is insensitive to asymmetries in 
probe variation distributions. This study summarizes 
the development of NeONORM and its evaluation us-
ing synthetic test and 9eal world" data. </p>

<p>Results and Discussion </p>

<p>Derivation of the NeONORM error 
function </p>

<p>We specifically thought to develop an inter-assay nor-
malization method for transcriptome or similar data 
that overcomes the problems associated with asym-
metric heavy tails in fold-change distributions (Fig-
ure 1). This method would supposedly be applied 
once (generally non-linear) intra-assay normalizations 
(such as print-tip correction) have already success-
fully been applied. Our central assumption in the 
reasoning leading up to the NeONORM method is 
that except for technical replicates, the common hy-
pothesis of symmetry of fold-change distributions is 
not well founded for inter-assay comparisons. In or-
der to avoid implementing several different methods 
specifically tailored to and distinguishing explicitly 
between technical replicates, biological replicates, and 
comparisons of truly different conditions, ideally, this 
novel method would also intrinsically adapt according 
to the nature of the inter-assay comparison. There-
fore, the method would behave in the limit of technical 
replicates and highly symmetric fold-change distribu-
tions, which is closely similar to the existing, averag-
ing, and linear methods such as Median normaliza-
tion. 
In addition to a quadratic error function </p>

<p>(quadratic in the signal difference x), we construct </p>

<p>a damping function such that it would restrict the 
maximum contribution of a large logQ (defined as 
the binary logarithm of the signal quotient) on the </p>

<p>local quadratic error (small variation Ax of z, see 
Figure 2A). In the limit of Ax approaching zero, the </p>

<p>influence of the damping function should disappear. 
For illustration, we have sketched the product of two </p>

<p>92 
Geno. Prot. Bioinfo. </p>

<p>Fig. 1 Asymmetric heavy tails in fold-change distribu-
tions. A histogram view of nine different "real-world" 
superimposed fold-change distributions is shown as cal-
culated from recent experimental work in our laboratory. 
The arrow indicates asymmetric heavy tails that arc ob-
served to different degrees in such experimental data. </p>

<p>such functions in Figure 2A. A simple multiplication 
of both the quadratic error function with the damping 
function obviously would result in lower error contri-</p>

<p>butions once 1x1 exceeds the equilibrium point (EP) </p>

<p>between the contributions of both functions, and can 
hence not be used. The NeONORM error function, 
however, approximates the multiplicative functions in </p>

<p>the bounds of 1x1 &lt;EP, and for 1x1 &gt;EP, the error be-</p>

<p>comes essentially invariant (Figure 2A). Additionally, 
the individual contributed errors would be scaled as 
a function of the quality of measurement (cumulated 
variances over both individual signals). The formal 
derivation of this modified NeONORM error func-
tion can be found in the supporting online material 
("NeONORMformalism.pdf"). In short: 
Damping the derivative of the quadratic error 
function with a Gaussian: </p>

<p>d a m p ( z ) = e-" 
(1) </p>

<p>yields the overall error function after integration and 
introduction of weights: </p>

<p>Vol. 4 No. 2 2006 </p>

<p>Noth et al. </p>

<p>For any xi, an individual minimum is obtained if </p>

<p>k is sufficiently small, and the greater k is, the more </p>

<p>errneo approaches the quadratic error function: </p>

<p>n </p>

<p>errneoc(a) = c wi . (1 -e-(zi-aI2 ) (2) </p>

<p>Testing err,,,c(a) on real data produced very </p>

<p>i=l </p>

<p>-errneo(% k , = c qXi -a) (4) </p>

<p>a </p>

<p>k </p>

<p>good results. Nevertheless, a parameter k to con-
lim </p>

<p>NeONORM error function: </p>

<p>trol the sensitivity was introduced to yield the final </p>

<p>k+O </p>

<p>(Dirac generalized functions) </p>

<p>I. -. )2 </p>

<p>n </p>

<p>errneo(a) = c wi . (1 -e-+) </p>

<p>(3) and </p>

<p>k-cc lim errneo(a, k) = errsqr(u) </p>

<p>( 5 ) </p>

<p>i=l </p>

<p>Fig. 2 The NeONORM error function. A. Schematic representation of the standard quadratic error function (solid 
black), as well as a damping function (dashed black), the product of both (dashed red), and the novel NeONORM error 
function (dashed blue) that we indirectly derived from the former. B. NeONORM damping function (dashed black) 
for the first derivative of the NeONORM error function, and the first derivate of the standard quadratic (solid black) 
and NeONORM (dashed blue) error functions. </p>

<p>Geno. Prot. Bioinfo. Vol. 4 No. 2 2006 </p>

<p>
Properties of the NeONORM error 
function </p>

<p>The NeONORM error function has very interesting </p>

<p>properties with respect to the free parameter k . As 
can be seen in Equation (3), the entire error to be 
minimized is in fact a sum of individual contributing </p>

<p>error functions err, ( u ) , each symmetrically centered </p>

<p>at x, and scaled by w,. Sums of these individual er-</p>

<p>ror functions have interesting properties that shall be 
discussed here, referring in particular to Figure 3. </p>

<p>The free parameter k , which we also refer to as </p>

<p>the "sensitivity parameter", has crucial influence on 
the shape of the total error function. For two values 
x, and xk, differences in their summation depend-
ing on their distance are depicted in Figure 3, where </p>

<p>The point pm = (x, + xk)/2 is crucial for distin-</p>

<p>guishing three different cases of summation by in-
specting the sign of the second derivative of errneo 
at p,: </p>

<p>T = (2% -xkl/k. </p>

<p>T &lt; 2 : errxeO(pm) &gt; O : p , is a minimum </p>

<p>T = 2 : errxeo(pm) = 0 : p , is a saddle point </p>

<p>T &gt; 2 : err:eo(pm) &lt; 0 : p , is a maximum </p>

<p>In the second case, the saddle point is a "wide" 
minimum and indicates a bifurcation point. In the 
third case, two distinct minima exist, as can be easily </p>

<p>T = 1 </p>

<p>r = 2 </p>

<p>seen in Figure 3. Note that the above holds true only </p>

<p>for equal weights wi and Wk. </p>

<p>The parameter k thus determines a border of dis-</p>

<p>crimination between clusters of points: no two points 
that have a distance less than 2k will create distinct 
minima. 
Unfortunately, at present, we are not able to de-
rive a formal definition of k . The parameter therefore 
has to be empirically derived. </p>

<p>Sign plots of the first order derivatives 
of the NeONORM error function as vi-
sual indicators </p>

<p>In order to further illustrate the properties of the </p>

<p>NeONORM error function at different values for k, we </p>

<p>plotted the first derivative over the range of -2 &lt; a &lt; </p>

<p>2 and </p>

<p>&lt; k &lt; 10'. In Figure 4A, we show a sign </p>

<p>plot (blue=negative, rcd=positive) and a 3D-surface 
plot of the function over the same parameter space. 
We compared two technical replicates generated from 
total RNA of HT29 cells [HT29(1) vs. HT29(2), see 
Materials and Methods]. As becomes evident from 
these plots, and as expected, the NeONORM error </p>

<p>function at large k possesses a single minimum (in the </p>

<p>sign plot: blue/red border) corresponding to the min-
imum of the quadratic error function (mean). With 
decreasing k , the sole minimum bifurcates into several </p>

<p>K = 2.5 </p>

<p>r = 4 </p>

<p>Fig. 3 Properties of the NeONORM error function. The NeONORM (composite) error function has exactly one </p>

<p>minimum for T 5 2 in the limit of identical weights for both individual error functions. Thereby T denotes the absolute 
distance between the global minima of the individual error functions in units of k . Here k is the NeONORM sensitivity </p>

<p>parameter identical to the absolute distance between the inclination points and the global minimum of each function. 
In the upper panel, we schematize the derivatives of the individual NeONORM contributing error functions (black: 
probe 1, blue: probe 2 ) , and their composite (red) for different values of T at constant k (shown are the first order 
derivates in the normalization factor u). The lower panel displays the original functions. Only when T increases above 
2, the NeONORM error function acquires two distinct minima. </p>

<p> 
Geno. Prot. Bioinfo. Vol. 4 No. 2 2006 </p>

<p>Noth et al. </p>

<p>Fig. 4 The NeONORM sensitivity parameter k . A. Sign plot and 3D-surface plot for the first order derivative in a of 
the NeONORM error as a function of the sensitivity parameter k and the normalization factor a. Sign plots are used to </p>

<p>illustrate the zero crossings of the function (blue-red and red-blue boundaries). The data represented are a subtraction </p>

<p>from two HT29 technical replicates HT29(1) vs. HT29(2). B. As in panel A for a subtraction between the modified, </p>

<p>artificial dataset HT29(l)mod 1/4 1.5&amp;0.15 vs. HT29(2). In order to generate the modified dataset, a random chosen 
quarter of all probe signals of the HT29(1) dataset was individually multiplied with a different random value drawn 
from a normal distribution with p=21.5 and a=O.l*p. C . As in panel A, but only a sign plot for the second order 
derivative in a is shown. D. The NeONORM error function for selected increasing values for k is shown for the HT29(1) </p>

<p>vs. HT29(2) (upper) and the HT29(l)mod 1/4 1.5f0.15 vs. HT29(2) datasets. Note that k=0.02 is the flattest curve 
in both cases. </p>

<p>Geno. Prot. Bioinfo. Vol. 4 No. 2 2006 </p>

<p>
NeONORM for Inter-assay Normalization </p>

<p>_ 
_~~~ ~ </p>

<p>local minima. These bifurcations process onset at </p>

<p>multiple a over a relatively short range of k. They 
hence reflect the growing (with decreasing k) </p>

<p>influence of smaller and smaller clusters of co-varying 
probes generating local minima in the error landscape. </p>

<p>At the limit of k approaching zero (the granularity </p>

<p>or numerical resolution of the given data), individual 
probes will generate local minima in the error func-
tion, whereas in the limit of k approaching infinity, 
the data are "appraised" by the function in the same 
way as in the quadratic error function. 
We then plotted the first derivative of the 
NeONORM error function for an inter-assay compari-
son where we used artificially distorted data (in order 
to generate asymmetry in the logQ distribution, see 
Materials and Methods). Briefly, the HT29(l)mod 
1/4 1.5 f 0.15 dataset was generated from HT29(1) 
by randomly choosing a quarter of all probe signals 
and multiplying each of them with a factor randomly 
drawn from a normal distribution with a mean of 21.5 </p>

<p>and a variance of 0.1*21.5. As becomes evident from </p>

<p>both plots in Figure 4B, the perturbation of the un-
derlying data generates a massive distortion in the </p>

<p>HT29(l)mod 1/4 1.5 f 0.15 vs. HT29(2) comparison. </p>

<p>The multiplication of a subset of probe signals with 
an almost constant factor essentially subdivides the 
probe set into two distinct clusters. This effect is no-</p>

<p>ticeable at relative large k when compared to the bi-</p>

<p>furcations observed within very symmetric data (Fig-
ure 4A). The NeONORM error function hence c a p 
tures strong clustering in the data. A second phe-
nomenon can be observed in the sign plots of the ar-</p>

<p>tificial dataset. With decreasing k, the relative posi-</p>

<p>tion of the global minimum of the error function shifts 
in a. Only at sufficiently small k , thus at sufficiently 
high sensitivity, the NeONORM error function re-
turns the optimal normalization factor amin. This </p>

<p>obviously has major implications for the choice of k. </p>

<p>At the same time, it illustrates the advantage of the 
NeONORM method in that averaging error functions </p>

<p>(comparable to NeONORM in the limit of k approach-</p>

<p>ing infinity) return suboptimal normalization factor </p>

<p>For further illustration purposes, we also plotted 
the second derivative of the NeONORM error function 
over the same parameter space with the unmodified 
HT29 data. Here, the commencement of the multi-</p>

<p>ple bifurcation zone already appears at larger k (Fig-</p>

<p>ure 4C). In Figure 4D, we show the NeONORM error 
function at selected k (increasing from top to bottom) </p>

<p>for both datasets, the unmodified (top) and modified </p>

<p>amm. </p>

<p> 
Geno. Prot. Bioinfo. </p>

<p>(bottom) HT29 inter-assay comparison. In the case 
of the asymmetric data, the appearance of a second </p>

<p>minimum at small k is clearly visible. </p>

<p>Choosing NeONORM parameter k </p>

<p>Since at present we are unable to derive a formal de-</p>

<p>scription of k, we had to empirically derive a suitable 
value for k. Thereby an equilibrium between two con-</p>

<p>siderations had to be found. Whereas €or k tending to 
zero the sensitivity of the NeONORM error function 
is maximal, the global minimum in the error function 
is the result of fewer and fewer probes, making the 
estimation of the normalization factor a less and less 
robust against variations and numerical inadequacy of 
the data. Using the artificial datasets, as well as some 
one hundred different experiments performed in our 
own laboratory, we have found that k=0.20 provides a 
stable estimate for amin, and should be considered the </p>

<p>lower bound for k. The derivation of a from uk=0.20 at 
smaller k thereby is systematically inferior to the nu-</p>

<p>merical precision imposed by the data. At the same 
time, k=0.20 should also.be the upper bound for k 
since the maximal attainable sensitivity/precision of 
the NeONORM method is reached. Note that k=0.20 
is found close to the commencement of the bifurca-
tion zone in almost all the data we have analyzed. 
The algorithmic implementation of NeONORM is ca-
pable of correctly identifying the global minimum of </p>

<p>the error function for arbitrarily small k, thus amin is </p>

<p>correctly estimated even within the bifurcation zone. </p>

<p>Since we cannot rule out the possibility that k needs </p>

<p>to be adjusted for different microarray platforms (for 
example, due to different precision of the numerical 
values), we have successfully applied the NeONORM 
method with k=0.20 to nine inter-assay comparisons 
of Affymetrix datasets (http://www.affymetrix.com). 
The evaluation of the NeONORM method presented 
below has been done at k=0.20. </p>

<p>"Asymmetric" test data </p>

<p>In order to evaluate the NeONORM method, sev-
eral well defined test datasets had to be acquired. 
First, we were looking for "real world'' inter-assay 
comparisons where the fold-change distributions were 
as close to symmetric as possible. To this end, we 
decided to use two technical replicates generated in 
our laboratory from the total RNA extracted from 
HT29 cells. These technical replicates, here de-
nominated as HT29(1) and HT29(2), share a Pear-</p>

<p>Vol. 4 No. 2 2006 </p>

<p>Noth et al. </p>

<p>son correlation of R=0.993, thus are indeed highly 
reproducible for the single biologic condition (Sup-
porting online material: "HT29.txt"). In order to 
generate asymmetries in a controlled fashion in the 
fold-change distributions, the HT29( 1) dataset was 
modified according to two distinct procedures to gen-</p>

<p>erate: (1) A dataset with ever increasing perturba-</p>

<p>tions at ever larger distance to a=O, and with a con-
stant and small variance over the perturbation (Fig-
ure 5; see Materials and Methods). This dataset 
was used to simultaneously test the performance and 
the robustness of the NeONORM method. Having 
up to a quarter of all probe signals artificially in-
duced with a logQ average of up to 21.5, and a con-</p>

<p>stant &lt;logR&gt;/&lt;variance&gt; ratio of 0.1, this dataset 
resulted in highly significant perturbations easily de-</p>

<p>tectable in the sign plots shown in Figure 5 (Sup-
porting online material: "HT29( 1)robustness.txt"). </p>

<p>(2) A second dataset where exponentially increas-</p>

<p>ing perturbations with a constant and large variance 
are introduced (Table 1; see Materials and Meth-
ods). For small ratios of modified probe signals </p>

<p>f (n=-32,500 for our AB1700 data), the perturba-</p>

<p>tions were very modest (Supporting online material: 
"HT29(l)sensitivity.txt"). Hence, this dataset can be 
used to evaluate the sensitivity of the NeONORM 
method at k=0.20. </p>

<p>Fig. 5 Artificial "asymmetric" datasets. Sign plots of the NeONORM error function for the first series of artificial </p>

<p>test data generated are shown (see Materials and Methods). A. From left to right: (1) Unmodified (original) dataset 
HT29(1) vs. HT29(2). (2) Asymmetrically modified dataset HT29(1) 1/4 1.5f1.5 (random chosen quarter, p=21.5 and 
a = p ) . (3) Double modified dataset HT29(1) 1/4 1.5f0.15 was once more modified by subsequently choosing another 
random quarter of probe signals and multiplying them with a random value drawn from a normal distribution with 
p=2-1.5 and a=O.l*p. This second operation generates almost symmetrically modified data, where the average total </p>

<p>of modified probe signals is 7/16. B. As in panel A. To the right of each row the fraction of modified probe signals </p>

<p>(1/16, 1/8, 1/4), and on the top of each column the average ratio change parameters (log2 of p and the corresponding 
a ) are indicated. </p>

<p>Geno. Prot. Bioinfo. Vol. 4 No. 2 2006 </p>

<p>
NeONORM for Inter-assay Normalization </p>

<p>Table 1 Pearson Correlations for Artificial Test Datasets </p>

<p>Pearson correlations </p>

<p>HT29( 1) unmodified </p>

<p>mod 1/256 1.5f1.5 
mod 1/128 1.5f1.5 </p>

<p>mod 1/64 1.5f1.5 
mod 1/32 1.5f1.5 </p>

<p>mod 1/16 1.511.5 </p>

<p>mod 1/8 1.5f1.5 
mod 114 1.511.5 </p>

<p>vs. HT29(1) vs. HT29(2) </p>

<p>1.000 
0.993 
0.984 
0.977 
0.961 
0.954 
0.931 
0.927 
0.837 
0.832 
0.794 
0.790 
0.793 
0.786 
0.718 
0.713 </p>

<p>In conclusion, the artificial datasets generated 
here to evaluate the absolute and relative performance 
of the NeONORM method are of high quality as the 
nature of the perturbations covers and exceeds the en-
tire range of feasible naturally occurring asymmetries, 
and the perturbations, due to the process of how they 
were generated, have similar statistical properties to </p>

<p>real experimental data. 
Finally, we chose two datasets from retinoic acid </p>

<p>(RA) treated and untreated NB4 cells obtained re-</p>

<p>cently in our laboratory as an example of "real" bi-
ologic data (Supporting online material: "NB4.txt"). 
The effect of RA on changes in the gene expression 
profiles of myeloid cells and human acute promyelo-</p>

<p>cytic leukemia [APL; the NB4 cell line was derived 
from an APL patient (28)] will be discussed in detail </p>

<p>elsewhere (data not shown). Briefly, RA directly acts 
upon the transcriptional activity of a group of nuclear 
receptor transcription factors, the so-called retinoid 
receptors (29), thereby switching their activity from a 
repressor state to a very potent activator state of gene 
expression ( 3 0 ) . The effects of RA on gene expression 
are very immediate and drastic (becoming apparent 
after as short as 15-30 min). Within the observed 
time scale of a couple of hours, RA thereby com-
mits NB4 cells to reentry into differentiation, which </p>

<p>is otherwise blocked by the presence of the PML-</p>

<p>RARalpha oncogene ( 3 1 ) . Given the nature of the 
activity switch, as well as the rapidness of the physio-
logic response, we rightly assumed that these datasets 
would display some degree of asymmetry in the fold-
change distributions. 
Note that all of these datasets had previously un-
dergone identical multiple non-linear and linear nor-
malization steps to account for systematic intra-assay 
variations before the artificial perturbations were in-
troduced and before these data were used for evalu-</p>

<p>ating NeONORM (see Materials and Methods). </p>

<p>Algorithmic implement at ion of the 
NeONORM method </p>

<p>Based on the above reasoning, we have developed 
an algorithm capable of generating and minimizing 
the negative second order exponential error functions 
used by the NeONORM method. For illustration of 
the algorithmic implementation, a pseudo-code de-
scription of the NeONORM algorithm is displayed in 
Figure 6. 
The algorithm consists of the following three steps: </p>

<p>(1) Finding intervals I1 . . . I, that each contains a </p>

<p>minimum; (2) Iteratively approaching for each j = </p>

<p>1 . . . n the minimum contained in the interval Ij un-</p>

<p>til a defined precision is reached, yielding a candi-
date value aj for the minimum in Ij; (3) Calculating 
the error values errj = errneo(aj) for each candidate 
and selecting aj that corresponds to the minimal er-</p>

<p>ror amongst err1 . . . errn. The algorithm is imple-</p>

<p>mented in <rs type="software">Java</rs> in the framework of the <rs type="software">ace.map</rs> suite 
for microarray statistical data analysis, which will be 
described in detail elsewhere. </p>

<p>A value for k needs to be defined as well as a search 
interval s and a maximum tolerated derivative c o w </p>

<p>A step size d is calculated a s a function of k. </p>

<p>Step 1: The interval s is sampled using [ s / d </p>

<p>steps. In every step i, the sign of the derivative of 
errneo at xi, namely s i , is calculated. If si is positive </p>

<p>and si-1 is negative, a zero crossing that belongs to a 
minimum occurs between xi-1 and xi. This interval 
is added to a vector of candidates. This first sam-
pling step is only required for small k when one cannot 
assume that there is only a single minimum. Other 
methods to find multiple minima could be used here, 
but this method has the advantage to use a defined </p>

<p> 
Geno. Prot. Bioinfo. Vol. 4 No. 2 2006 </p>

<p>P 
s. </p>

<p>R </p>

<p>? </p>

<p>Z </p>

<p>? </p>

<p>KJ </p>

<p>KJ </p>

<p>0 
0 </p>

<p>m </p>

<p>(0 
(0 </p>

<p>NeONORM 
parameters: 
data sets X={P, </p>

<p>P } , Y={Y-, </p>

<p>PI, each o f size </p>

<p>n </p>

<p>k 
ao, the i n i t i a l guess f o r a </p>

<p>s, </p>

<p>the i n t e r v a l s i z e the minimum i s searched f o r i n s i d e </p>

<p>d, the sample step width 
m a h i t e r , the maximum number o f i t e r a t i o n s 
conv, the maximum allowed d e r i v a t i v e e r r o r </p>

<p>rem 
calculates the cumulated neonorm e r r o r used f o r </p>

<p>rem 
i n i t i a l minimum detection 
subroutine error(a. k) begin 
sum := </p>

<p>0 </p>

<p>f o r a l l </p>

<p>i </p>

<p>I O&lt;i&lt;n </p>

<p>endfor 
return sum 
sum := </p>

<p>sum </p>

<p>+ wi 
* (l-exp(-(qi-a)2/(2*k2))) </p>

<p>end subroutine 
rem 
calculates the derivative o f the cumulated neonorm error </p>

<p>rem 
used t o i t e r a t i v e l y determine a l o c a l minimum 
subroutine errorDeriv(a, k) begin 
sum := </p>

<p>0 </p>

<p>f o r a l l </p>

<p>i </p>

<p>I O&lt;im </p>

<p>endfor 
return sum 
sum := </p>

<p>sum </p>

<p>+ wi </p>

<p>* e~p(-(qi-a)~/(2*kz)) </p>

<p>* (a-q,) </p>

<p>/ k* </p>

<p>end subroutine 
rem 
rem 
w i t h the given i n t e r v a l bounds a -s , </p>

<p>ao+s. returns when the absolute </p>

<p>rem 
o f the remaining d e r i v a t i v e f a l l s below conv </p>

<p>subroutine minimum(&amp;, s, </p>

<p>k, conv) begin </p>

<p>i t e r a t i v e l y decreases the distance t o the t r u e minimum s t a r t i n g 
count := </p>

<p>0 </p>

<p>% . 
, </p>

<p>:= </p>

<p>ao-s </p>

<p>ancg := </p>

<p>ao+s </p>

<p>dpos := 
errorcaw,, k) </p>

<p>dneg := </p>

<p>error(aneg, k) </p>

<p>i f si gn(e,,) </p>

<p>= </p>

<p>si gn(e..,) </p>

<p>then </p>

<p>endi </p>

<p>f 
return w i t h f a i l u r e </p>

<p>i f si gn(e,,) </p>

<p># </p>

<p>1 </p>

<p>then 
swap(aporI a d </p>

<p>swap( d, , </p>

<p>, d d </p>

<p>endif </p>

<p>do </p>

<p>at := </p>

<p>Ca, , +an. , ) / 2 </p>

<p>dt := </p>

<p>errorDeriv(ar, k) </p>

<p>i f sign(dr) = 1 </p>

<p>apor := </p>

<p>at </p>

<p>dpor := </p>

<p>dt </p>

<p>else 
an-:= </p>

<p>at </p>

<p>dntg := </p>

<p>dr </p>

<p>endi </p>

<p>f 
count := </p>

<p>count+l </p>

<p>while c o u n t a n a h i t e r AND </p>

<p>l d t l &gt; </p>

<p>conv </p>

<p>return at </p>

<p>end subroutine 
rem 
determines a set o f i n t e r v a l s containing a minimum each using sign </p>

<p>rem 
changes from negative t o positive, i t e r a t i v e l y f i n d s the precise </p>

<p>rem 
position i n s i d e o f each o f the i n t e r v a l , calculates the corresponding </p>

<p>rem 
e r r o r values and returns the p o s i t i o n w i t h the smallest such e r r o r </p>

<p>subroutine absminck, s) </p>

<p>begin </p>

<p>VarArray a r r </p>

<p>l a s t s i g n := 
sign( errorDeriv(a0-s, k) ) </p>

<p>f o r a,=ao-s+d t o &amp;+s </p>

<p>step d </p>

<p>sign := 
sign( errorDeriv(a,, </p>

<p>k) ) </p>

<p>i f sign = </p>

<p>1 AND 
l a s t s i g n = </p>

<p>-1 </p>

<p>then </p>

<p>add element (a,-d/2) </p>

<p>t o a r r </p>

<p>e n d i f 
l a s t s i g n := </p>

<p>sign </p>

<p>endfor </p>

<p>f o r a l l elements a r r i i n a r r 
endfor 
ei := 
minimum(arri, s/2, k) </p>

<p>B </p>

<p>:= </p>

<p>1 </p>

<p>E </p>

<p>:= </p>

<p>el </p>

<p>f o r a l l </p>

<p>i </p>

<p>I l&lt;issize-of(arr) </p>

<p>i f ei&lt;E then </p>

<p>E </p>

<p>:= </p>

<p>ei </p>

<p>6 </p>

<p>:= </p>

<p>i </p>

<p>endi </p>

<p>f </p>

<p>endfor 
return as </p>

<p>end subroutine </p>

<p>Fig. 6 The pseudo-code for the implementation of the NeONORM algorithm. Additional details for the implementation 
can be made available upon written inquiry to the authors. </p>

<p>Geno. Prot. Bioinfo. Vol. 4 No. 2 2006 </p>

<p>
NeONORM for Inter-assay Normalizatiop </p>

<p>number of steps and is shown to be sufficient for the 
described purpose. 
Step 2: For every such candidate q, the minimum 
m; is further approached iteratively, halving the size 
of the interval [xlow, xhigh] in every iteration step. In 
every step, the function calculates the error deriva-
tive d, for the point p , on half distance between xlow 
and xhigh. If d, is negative, xlOw is replaced by x,, </p>

<p>otherwise Zhigh. The function stops once Idel &lt; conv. </p>

<p>Step 3: For every minimum m;, the actual error 
is calculated. The errors for all minima are compared 
and the mininum that belongs to the smallest error is 
returned. 
Functions for calculating the cumulated error and 
its derivative sum up the results of corresponding 
functions that calculate individual error and error 
derivative for each gene, respectively. 
Assume there are n genes in a dataset. For every 
single error or derivative, n. exponentials have hence 
to be calculated (plus n times some basic arithmetical 
operations that are not regarded here). The step size </p>

<p>d is proportional to k. So the number of exponentials 
to be calculated for Step 1 is proportional to n . s / k . </p>

<p>The iterative method in Step 2 will find exactly 
one minimum in the given interval if at least one ex-
ists. If there exist several minima, the method will 
find one of them ignoring the existence of others. The 
method is fast, stable, and rarely requires more than 
30 iterations to converge under ~o n v = l O -~ for all con-
sidered cases so far. </p>

<p>The algorithm was tested for k less than the nu-</p>

<p>merical precision of data provided ( 
distinguish-
ing more than 500 minima in the interval [-0.1 : 0.11. </p>

<p>Comparative 
validation 
of 
the 
NeONORM method </p>

<p>We proceeded to evaluate the performance, robust-
ness, and sensitivity of the NeONORM method on 
the different "real world" and artificial datasets by 
comparative validation of three methods, that is, 
inter-assay normalization by the Median, LOWESS 
(Locally WEighted Scatterplot Smoothing), and 
NeONORM methods. Figure 7 summarizes the key 
comparison results of the Median and NeONORM 
methods for the artificial datasets from Figure 5. In 
all the three panels of Figure 7A, frequency plots 
of the logQ distributions between two input sample 
datasets are depicted. On the unmodified HT29(1) 
vs. HT29(2) inter-assay comparison (Figure 7A1), 
both methods perform highly similarly as expected. </p>

<p>As we have shown above formally for the NeONORM </p>

<p>error function in the limit of large k (2 lo), the er-</p>

<p>ror estimate becomes virtually identical to the one 
obtained by Median normalization. We have further-
more contended that the NeONORM error function </p>

<p>at k10.20 still closely resembles the quadratic error </p>

<p>function in case of symmetric fold-change distribu-
tions (Figure 5A). We find this assumption confirmed 
using the technical HT29 replicates since the nor-
malization factors a are virtually identical for both 
methods (a~=0.0000, a~=-0.0045). Note that the 
small differences of both curves in the frequency plot 
are rather due to rounding differences in the bin-
ning procedure. When both NeONORM and Me-
dian normalization methods are applied to an as-
say comparison with an asymmetric heavy tail [Fig-</p>

<p>ure 7A2: HT29(1) mod 114 1.5 f 1.5 vs. HT29(2)], </p>

<p>a clear difference becomes apparent. Note that 
NeONORM correctly identifies the error minimum 
and normalizes the asymmetric data such that the 
maximum of the frequency distribution falls upon 
logQ=O, whereas Median normalization shifts the fre-
quency distribution significantly to negative logQ val-
ues (a~=-0.5472, a~=0.0000). In case of the com-
pensatory doubly modified dataset [HT29( 1)mod 1/4 </p>

<p>1 . 5 f 0.15 and mod 114 -1.5 f 0.15 vs. HT29(2); Sup-</p>

<p>porting online material: "HT29(l)double.txt"], the 
difference between both methods is less pronounced; 
however, NeONORM clearly much better normal-
izes this dataset as well (Figure 7A3: a~=-0.1672, 
a~=-0.0038). The fact that Median normalization 
does not lead to identical results here is due to the 
successively random choosing of probe subsets for 
modification, which, as can be easily shown, highly 
unlikely leads to perfectly symmetric data. Together 
with the initial unmodified data shown in Figure 
7A1, this experiment demonstrates that NeONORM 
is insensitive to the presence of asymmetric heavy 
tails in the fold-change distributions, whereas aver-
aging normalization methods for obvious reasons fail 
to correctly normalize the datasets. In Figure 7B, we 
look at Median (Figure 7B1) vs. NeONORM (Fig-
ure 7B2) normalization performance on the remain-
ing nine artificial datasets shown in Figure 5B. As 
before, NeONORM correctly normalizes the different 
datasets such that the maxima of the increasingly 
perturbed datasets all superimpose at logQ=O. Me-
dian normalization, in contrast, leads to maxima be-
ing gradually (as a function of the perturbation of 
the artificial dataset) shifted towards negative logQ 
values (Figure 7B1). Figure 7B3 summarizes these </p>

<p> 
Geno. Prot. Bioinfo. Vol. 4 No. 2 2006 </p>

<p>Noth et al. </p>

<p>Fig. 7 Comparison of Median vs. NeONORM normalization. A. Direct comparison of Median vs. NeONORM on </p>

<p>the datasets from Figure 5A. Frequency plots of logQ are shown simultaneously for both methods (Median in grey, 
NeONORM in red). B. Direct comparison of Median vs. NeONORM on the datasets from Figure 5B. Frequency 
plots of logQ are shown in the upper two panels simultaneously for all nine datasets (Bl: Median normalized, B2: 
NeONORM normalized). B3: Frequency plots of logQ are shown simultaneously for both methods (Median in grey, </p>

<p>NeONORM in red) on the HT29(l)mod l/q 1.5&amp;0.15 vs. HT29(2) dataset. </p>

<p>Geno. Prot. Bioinfo. Vol. 4 No. 2 2006 </p>



<p>NeONORM for Inter-assay Normalization </p>

<p>findings by directly comparing both methods on the 
most severe perturbed artificial dataset [HT29( 1)mod </p>

<p>-0.00601. In conclusion, the NeONORM method per-
forms very well even on highly asymmetric data, and 
is robust with respect to the grade of the asymmetry 
[the range covered is from near zero (technical repli-
cates shown in Figure 7A1) to a point that certainly 
exceeds any natural occurring gene regulatory event 
(Figure 7B3)]. 
In order to perform a sensitivity test of the 
NeONORM method, we used the second artificial 
test dataset. In this case, we additionally compared 
NeONORM performance relative to an implementa-
tion of the LOWESS algorithm (32-34). LOWFSS 
is a very well performing non-linear normalization 
method widely used for intra-and inter-assay nor-
malization (Ref. 12,32; see Materials and Methods). 
The results of the direct comparisons are summa-
rized in Figure 8A. The three panels show histogram 
plots for the logQ distributions of the second artificial 
dataset (Table 1; see Materials and Methods) as func-
tions of the normalization methods. As was true for 
the previous dataset, Median normalization results 
in successive "migration" of the distribution maxi-
mum towards negative logQ values as a function of 
the severity of the perturbation (Figure 8A1). The 
LOWESS method seems to perform much better than 
Median normalization, as much as the maximum of 
the distribution is more stable around the logQ=O 
point. However, when the perturbations of the orig-
inal dataset become more and more severe (here es-
pecially evident for f =1/8 and f=1/4), the maximum 
of the distribution also shifts towards negative logQ 
values, indicating that the LOWESS method cannot 
correct for the asymmetries in the logQ distribution. 
Furthermore, due to the nature of the non-linear ap-</p>

<p>proach, the relative stability of LOWESS at low f </p>

<p>values is counterbalanced by a significant distortion 
of the data (compare characteristic peaks at the max-
imum or the heavy tails between all distributions and 
with respect to the normalization methods). By con-
trast, NeONORM again performs equally well on all 
eight conditions, with the maxima of the distribu-
tions perfectly superimposed at logQ=O. Note that 
due to the linear nature of the normalization opera-
tion, no distortion of the distributions occurs. In or-
der to demonstrate the significance of the differences 
in normalization factor ai over this experimental se-
ries, we have generated a probe call table using arbi-
trary thresholds for logQ (as the nature and absolute </p>

<p>I/* 1.5 f 0.15 VS. HT29(2); UM=-0.4774, UN= </p>

<p>value of the thresholds do not matter), and compared </p>

<p>the differences in logQ calls (Table 2). It is appar-</p>

<p>ent from this table that NeONORM, due to more ac-
curate normalization, is the only method that shows 
constant logQ&lt; -1 calls [see column with relative val-
ues, note that variation (negative values) is due to the 
normal distribution properties of the random drawing 
of factors during the perturbation of the data]. f i r -
thermore, the logQ&gt; 1 calls are proportional to the 
severity of the perturbation. Median normalized data, 
as expected by the nature of the operation, almost 
"grow" symmetrically over both thresholds, whereas 
LOWESS normalization generates satisfactory results 
for slightly biased test data and just starts to diverge </p>

<p>significantly from NeONORM at f &gt; 1/32. The dis-</p>

<p>tortion of the dataset also becomes apparent when 
comparing the total numbers of probe calls beyond 
the two thresholds. 
In order to further quantify the relative per-
formance of the different normalization techniques 
and demonstrate the robustness of NeONORM when 
dealing with asymmetric microarray data, we calcu-
lated the Type I and Type I1 errors resulting from 
NeONORM and Median normalization methods (the 
latter was found to be the least appropriate method 
in the above assays, see Table 2) on a selection of the 
synthetic datasets introduced above. Since those syn-
thetic data were generated from the HT29(1) dataset 
(see Materials and Methods), we can calculate the 
number of probe calls that should occur in a compari-
son with HT29(1) using the correct normalization fac-
tor a,=O. Any deviation from this calculated number 
is to be considered an error introduced through the 
normalization method that was applied. According 
to the nature of the false call (false positive or false 
negative), we can determine the type of error [incor-
rect rejection of a true null-hypothesis (I) or failure 
to reject a false zero hypothesis (11) of non-change]. 
Table 3 lists the results where the two types of errors 
were calculated as percent false calls when subtracting 
the four increasingly asymmetric synthetic datasets 
from the original HT29(1) dataset. We thereby in-
vestigated the 99% confidence interval for our zero-
hypothesis and set a cut-off for determining the num-</p>

<p>ber of probe calls at IlogQI &gt; 1.00. Note that due </p>

<p>to the use of random number generators when creat-
ing the synthetic files, the calculated expected probe 
calls are associated with a variance. Thus, only er-
rors superior to 0.038% are significant (bold-face). In 
agreement with the observations made before (Table 
2), NeONORM consistently outperforms Median nor-</p>

<p> 
Geno. Prot. Bioinfo. Vol. 4 No. 2 2006 </p>

<p>Noth et al. </p>

<p>Table 2 Comparative Performance of Median, LOWESS, and NeONORM Methods 
on Artificial Microarray Data* </p>

<p>Median 
Profile [vs. HT29(2)] 
logQ&lt; -1 
bgQl I 1 
logQ&gt; 1 
abs 
re1 
abs 
re1 
abs 
re1 
HT29(1) unmodified 2,139 
0 
28,300 
0 
2,193 
0 
mod 1/256 1.5f1.5 
2,138 
-1 
28,213 
-87 
2,281 
88 
mod 1/128 1.5f1.5 
2,171 
32 
28,144 
-156 
2,317 
124 
mod 1/64 1.5f1.5 
2,218 
79 
27,990 
-310 
2,424 
231 
mod 1/32 1.5H.5 
2,424 
285 
27,673 
-627 
2,535 
342 
mod 1/16 1.5f1.5 
2,640 
501 
27,013 -1,287 
2,979 
786 </p>

<p>mod 1/4 1.5f1.5 
5,305 3,166 
22,387 -5,913 
4,940 2,747 </p>

<p>Profile [vs. HT29(2)] 
logQ&lt; -1 </p>

<p>IlogQl I 1 </p>

<p>logQ&gt; 1 </p>

<p>mod 1/8 1.5f1.5 
3,493 1,354 
25,477 -2,823 
3,662 1,469 </p>

<p>LOWESS (f=0.3, iteration=2, 6=10E5) </p>

<p>abs 
re1 
abs 
re1 
abs 
rei </p>

<p>HT29(1) unmodified 2,043 
0 
28,334 
0 
2,255 
0 
mod 1/256 1.5f1.5 
2,043 
0 
28,246 
-88 
2,343 
88 
mod 1/128 1.5f1.5 
2,046 
3 
28,176 
-158 
2,410 
155 
mod 1/64 1.5f1.5 
2,060 
17 
28,008 
-326 
2,564 
309 
mod 1/32 1.5f1.5 
2,078 
35 
27,692 
-642 
2,862 
607 
mod 1/16 1.5f1.5 
2,097 
54 
27,092 -1,242 
3,443 1,188 
mod 1/8 1.5f1.5 
2,208 
165 
25,821 -2,513 
4,603 2,348 
mod 1/4 1.511.5 
2,690 
647 
23.493 -4,841 
6,449 4,194 
NeONORM (k=0.20, conv.=lOE4) </p>

<p>Profile [vs. HT29(2)] </p>

<p>logQ&lt; -1 </p>

<p>J </p>

<p>llogQl5 1 
logQ&gt; 1 
abs 
re1 
abs 
re1 
abs 
re1 
HT29(1) unmodified 
mod 1/256 1.533.5 
mod 1/128 1.5f1.5 
mod 1/64 1.534.5 
mod 1/32 1.5f1.5 
mod 1/16 1.511.5 
mod 1/8 1.5f1.5 
mod 1/4 1.5f1.5 </p>

<p>2,144 
2,143 
2,144 
2,143 
2,140 
2,129 
2,142 
2,144 </p>

<p>0 
-1 </p>

<p>0 </p>

<p>-1 </p>

<p>-4 
-15 
-2 
0 </p>

<p>28,301 
28,214 
28,144 
27,973 
27,678 
27,065 
25,751 
23,267 </p>

<p>0 
-87 
-157 
-328 
-623 
-1,236 
-2,550 
-5,034 </p>

<p>2,187 
2,275 
2,344 
2,516 
2,814 
3,438 
4,739 
7,221 </p>

<p>0 
88 
157 
329 
627 
1,251 
2,552 
5,034 </p>

<p>*Probe calls according to all three normalization methods are summarized for the second set of artificially generated 
data. Corresponding Pearson correlations are shown in Table 1. See Materials and Methods for a description of the 
modification procedure. abs = absolute number of probes, re1 = relative (to the first row in each column) number of 
probes. Parameters for LOWESS and NeONORM methods are also indicated in the header row. </p>

<p>malization whether Type I or Type I1 error is con-
sidered. As a matter of fact, NeONORM is resis-
tant against Type I errors even when Median nor-
malization results in greater one percent of false p o s 
itive calls, which corresponds here to 386 out of a 
total of 32,821 probes. When very significant asym-
metries are introduced (up to a quarter of all probe 
signals being modified), NeONORM starts to gener-</p>

<p>ate some Type I1 errors; however, the values are still 
well below the Type I1 errors observed with Median 
normalization. NeONORM thus indeed significantly 
reduces the number of false calls due to inadequate 
or inefficient inter-assay normalization. Most impor-
tantly, NeONORM avoids Type I errors. 
Finally, we also applied all the three normalization </p>

<p>methods to a second "real world" dataset (NB4 RA 4h </p>

<p>Geno. Prot. Bioinfo. Vol. 4 No. 2 2006 </p>



<p>NeONORM for Inter-assay Normalization </p>

<p>Table 3 Type I and Type I1 Error Analysis for Median and NeONORM Normalization 
Using the Synthetic Datasets* </p>

<p>HT29(1) vs.: 
Absolute Error (%) 
(IlogQf &gt;1.00, p &lt;0.01) 
NeONORM </p>

<p>Median </p>

<p>TypeI TypeII 
TypeI TypeII </p>

<p>HT29( 1) unmodified 
0.000 
0.000 
0.000 
0.000 </p>

<p>mod 1/256 1.5f1.5 </p>

<p>0.030 
0.000 
0.012 
0.000 
mod 1/64 1.5f1.5 
0.006 
0.000 
0.021 </p>

<p>0.015 </p>

<p>mod 1/16 1.5f1.5 </p>

<p>0.000 
0.076 
0.082 
0.189 
mod 1/256 1.5f1.5 
0.000 
0.207 
1.176 
1.222 </p>

<p>*Error is expressed as percent false probe calls at the given threshold and confidence interval for the zero-hypothesis 
of non-change in the subtraction profiles generated when comparing the modified datasets to the original HT29( 1) 
dataset. Significant values are in bold type setting. </p>

<p>vs. NB4, see Materials and Methods, and also the 
paragraph on "Asymmetric test data"). As discussed 
above, given the nature of the physiologic response 
to RA, we had reasons to believe that such a dataset 
might be similar to some of the datasets presented 
in Figure 1 that show asymmetric heavy tails in the 
logQ distributions. Figure 8B summarizes the results 
we obtained by using the three normalization meth-
ods in direct comparison. In Figure 8B1, we show the 
first order derivative of the NeONORM error func-</p>

<p>tion at k=0.20 over the range from -2 &lt; a &lt; 2. </p>

<p>The histogram plots of logQ distributions in Figure 
8B2 recapitulate the results that were earlier obtained 
with the constructed test data. Median normaliza-
tion leads to a very significantly shifted maximum 
(blue curve); LOWESS shows intermediate perfor-
mance with respect to positioning of the maximum, 
but distorts the distribution (grey curve) when com-
pared to NeONORM. Since these are non-controlled 
data (in the sense that we have not generated the 
asymmetry ourselves), we can only judge the rela-
tive performance. On the other hand, since the data 
are individually (intra-assay) median pre-normalized, 
the fact that the NeONORM normalization factor is 
close to zero [a~=-0.4106, aN=0.0000, note that aL 
(given the non-linear nature) cannot be directly de-
termined, and can only be estimated by renormalizing 
these data with NeONORM and determining the re-
quired normalization factor aaNL, which repositions 
the LOWESS maximum back to superimpose exactly 
with the NeONORM value UUNL=-0.0399] indicates 
that NeONORM here again performs close to opti-
mum. As for the artificial data in Figure 8A, we also 
performed the probe call test (Table 4) to demonstrate 
the significant impact of choice of inter-assay normal-</p>

<p>104 </p>

<p>Geno. Prot . Bioinfo. </p>

<p>ization on potential results of comparative studies. In-
terestingly, due to the compression of the data during 
the LOWESS normalization, this method performs 
most poorly on the dataset (highest number of poten-
tially false "down-regulated" calls, and lowest number 
of "up-regulated" calls) when compared to the other 
two methods. These results clearly can only be an in-
dication of the relative performance of the three meth-
ods, as at present we can neither establish this dataset 
as representative for transcriptome studies, nor esti-
mate the number of "down-" and "up-regulated" calls 
we should expect. However, given the detailed anal-
ysis we have performed above using artificially (in a 
well-controlled manner) modified data, NeONORM 
is the only method that shows robustness towards 
asymmetric logQ distributions. Given the fact that 
our two distinct strategies for generating these test 
datasets largely cover what could be expected to oc-
cur in real biologic samples as maximal asymmetry, 
and show that NeONORM scales very well with the 
degree of asymmetry and performs perfectly well in 
the limit of maximal symmetric data, we can draw the 
conclusion that NeONORM overcomes the problems 
associated with the standard symmetry hypothesis in 
linear inter-assay normalization. </p>

<p>Applicability of NeONORM </p>

<p>Since NeONORM is basically invariant to the level of 
asymmetry in the data, perfectly symmetric data are 
also processed correctly. Hence, NeONORM can be 
applied to any comparative inter-assay study without 
any a priori knowledge about, and regardless of the 
level of symmetry. Given their similitude in nature, 
NeONORM should also find its application in other </p>

<p>Vol. 4 No. 2 2006 </p>

<p>Noth et al. </p>

<p>Table 4 Probe Calls of All the Three 
Normalization Methods on the 
"Real World" Dataset </p>

<p>Method 
NB4 RA 4h vs. NB4 
logQ&lt; -1 </p>

<p>JlogQI 5 1 logQ&gt; 1 </p>

<p>Median 
4,479 
19,428 
4,883 
LOWESS 
4,052 
20,956 
3,792 
18.721 
7.694 
NeONORM 
2.375 </p>

<p>Fig. 8 Comparison of Median, LOWESS, and NeONORM normalization. A. Direct comparison of Median, LOWESS, </p>

<p>and NeONORM normalization on the artificial datasets summarized in Table 1. Histogram plots of log&amp; are shown </p>

<p>in the three panels simultaneously for all the six modified datasets and the original dataset. B. Direct comparison of </p>

<p>Median, LOWESS, and NeONORM normalization on the "real world'' NB4 RA 4h vs. NB4 dataset. B1: the first </p>

<p>order derivative in a of the NeONORM error function at k=0.20, for the range -2 &lt; a &lt; 2. B2: Normalization of the </p>

<p>NB4 RA 4h vs. NB4 according to all the three methods (Histogram plot is shown, blue = Median, grey = LOWESS, 
red = NeONORM). </p>

<p>Geno. Prot. Bioinfo. Vol. 4 No. 2 2006 </p>

<p>
NeONORM for Inter-assay Normalization </p>

<p>functional genomics applications such as comparative 
genome hybridizations or ChIP-on-chip experiments, 
which seem even more prone to asymmetries given an 
even reduced dynamic range of the signal response. 
The same prerequisites as for microarray experiments 
will probably have to be met there, as non-linear 
intra-assay normalization methods should for similar 
reasons be applied first to the individual experiments. </p>

<p>Future challenges </p>

<p>Since the estimate of the over-all error is used dur-
ing the iterative minimization procedure, and also the 
minimum of the error function is found at different </p>

<p>values for anin (as a non-trivial function of k), the 
choice of k should not be arbitrary. It seems obvious </p>

<p>from the sign plots presented in Figures 4 and 5 that </p>

<p>k for practical reasons should be sufficiently large to </p>

<p>assure that the error function is not estimated within 
the multiple bifurcation region where individual or 
small group of co-varying probes attain significant </p>

<p>influence. On the other hand, k should be chosen </p>

<p>as small as possible in order to ascertain maximum 
sensitivity of the NeONORM method with respect to 
asymmetric logQ distributions. While other meth-
ods such as LOWESS normalization sometimes also 
possess even several "free" parameters (32,33), and 
much effort has been devoted to identify empirical op-
timal parameter ranges ( l a ) , we feel that in the case 
of NeONORM, a formal way of definition might be </p>

<p>possible as parameter k directly reflects an inherent </p>

<p>property of the analyzed data. To derive a formal way </p>

<p>of selecting parameter k will thus represent a major </p>

<p>challenge towards the perfection of the NeONORM 
method. We specifically invite suggestions or ideas </p>

<p>towards such a formal derivation of k. At the same </p>

<p>time, we have taken great care in the empiric deriva-</p>

<p>tion of a suitable k as demonstrated during the eval-</p>

<p>uation of the overall performance of the NeONORM 
method. The range of possible asymmetries covered 
through our artificial test datasets should assure that 
NeONORM performs in a robust fashion with respect 
to true physiologic datasets. 
Finally, the integration of NeONORM with other 
methods of normalization deserves further interest. 
We clearly state that the NeONORM normalization 
can only be one of the several methods applied to 
current microarray data. However, the potential in-
terplay of different non-linear intra-assay and linear 
inter-assay normalization methods does not seem to 
have been studied systematically yet. Potentially, a </p>

<p> 
Geno. Prot. Bioinfo. </p>

<p>combination of particularly robust and situation/data 
adapted methods can be found and optimized to sim-
plify, at a maximum of coherence, the microarray sta-
tistical analysis process. </p>

<p>Conclusion </p>

<p>The NeONORM method overcomes a current limita-
tion of inter-assay normalization methods in that it 
is robust against asymmetries in the underlying fold 
change distributions. Such asymmetries reflect true 
changes in gene expression patterns rather than sys-
tematic experimental variation. NeONORM, a non-
discriminant method, if combined with initial non-
linear intmassay normalization methods, could lead 
to better inter-assay normalization and thus better 
identification and estimation of gene regulatory phe-
nomena in comparative transcriptome studies. </p>

<p>Materials and Met hods </p>

<p>Cell culture and RNA extraction </p>

<p>Two different cell lines were used in the experi-
ments. Human colon carcinoma HT29 cells (ATCC 
No: HTB-38) were cultivated under standard condi-
tions in Dulbecco's Modified Eagle Medium (DMEM; 
Gibco, ProdNo: 41965-039) supplemented with 4.5 </p>

<p>g/L glucose, 10% foetal bovine serum (FBS; PAA </p>

<p>Laboratories GmbH, ProdNo: A15-649), antibiotics </p>

<p>(a mix of 10 U/mL penicillin G and 10 mg/L strep-</p>

<p>tomycine; Gibco, ProdNo: 15140-122), and 1.5 mM 
L-glutamine (Gibco, ProdNo: 25030-024). Cells were 
harvested during the exponential growth phase and 
subjected to RNA extraction. We have previously </p>

<p>described cultivation and all-trans FtA treatment of </p>

<p>NB4 cells ( 3 5 ) . Here, where appropriate, 
M of </p>

<p>all-trans FtA (Sigma) was directly applied to the cul-</p>

<p>ture for 4 h prior to harvesting of the cells. RNA 
extraction was performed using the Qiagen RNeasy 
method according to the manufacture's recommen-
dations (ProdNo: 75144). Quality and quantity of 
the isolated total RNA was determined using an Ag-
ilent 2100 Bioanalyzer as well as standard spectre 
photometry. </p>

<p>Microarray technology </p>

<p>We used the novel Applied Biosystems AB1700 
(ProdNo: 4338036) oligonucleotidebased microar-
ray technology (http://www.appliedbiosystems.com). </p>

<p>Vol. 4 No. 2 2006 </p>

<p>Noth et al. </p>

<p>For the present study, only Human Genome Sur-
vey Microarrays (V1.0, ProdNo: 4337467) were used, 
which contain probes for 29,918 validated human 
genes. Two assays with HT29 total RNA were per-
formed as technical replicates [HT29( 1) and HT29(2)]. 
One assay with NB4 cells that had been treated for 4 </p>

<p>h with RA (NB4 RA 4h) and the other from untreated </p>

<p>NB4 cells (NB4) have further been specifically used. </p>

<p>RNA labeling, hybridization, and de-
tection </p>

<p>RNA labeling, hybridization, and detection were per-
formed following the protocols supplied by Applied 
Biosystems together with the corresponding kits. 20 
pg of total RNA sample was subjected to Chemilu-
minescence (CL) RT Labeling (Applied Biosystems, 
ProdNo: 4339628). Labeled cDNAs were then hy-
bridized and detected (Applied Biosystems, ProdNo: 
4346875). </p>

<p>Data preprocessing and primary analy-
sis </p>

<p><rs id="software-2" type="software">Applied Biosystems Expression Array System Soft- ware</rs> (V<rs corresp="#software-2" type="version-number">1.l.l</rs>, ProdNo: 4364137) has been used to 
acquire the CL and fluorescence (FL) images and 
primary data analysis. Briefly, the primary analy-
sis consists of the following individual operations: (1) 
Image correction; (2) Global and local background 
correctton; (3) Feature normalization; (4) Spatial 
normalization; (5) Global normalization. Note that 
we renormalize the resulting data according to the 
median once more after having removed probes for 
which the <rs type="software">Applied Biosystems Software</rs> has set flags 
greater than 212, indicating compromised or failed 
measurements (as recommended by Applied Biosys-
tems). This secondary normalization is implemented 
in the <rs type="software">ace.map</rs> suite. </p>

<p>Generation of artificially modified test 
dat aset s </p>

<p>Two artificially modified test datasets were generated 
by modifying the HT29(1) dataset. The modifications 
were carried out in order to generate asymmetries in 
a controlled fashion in the fold-change distributions. 
The general procedure for the modification can be 
summarized as follows: </p>

<p>A selected dataset X of size n is modified accord-</p>

<p>ing to three parameters: </p>

<p>Geno. Prot. Bioinfo. </p>

<p>(1) f-the ratio of signals to be modified. Exactly </p>

<p>Lf . nJ signals are modified; </p>

<p>(2) p-the mean of the normal distribution from 
which the factor is drawn; 
(3) u-the variance of the normal distribution 
from which the factor is drawn. 
The routine is implemented in <rs type="software">Java</rs> using the 
supplied pseudo random number generator and 
the transformation function Ijava.util.Random.next 
Gaussian()], which implements the Polar Method by 
Box e t al [http://java.sun.com/j2se/l.4.2/docs/api/ </p>

<p>java/util/Random.html#nextGaussian()] . </p>

<p>The pseudo-code for the function can be given as: </p>

<p>additional variables a, b, c, r, n, frac </p>

<p>subroutine modify-dataset (X, f, p, IS) begin 
let n := size-of (X) </p>

<p>let frac := floor(f*n) </p>

<p>rem unsort the data </p>

<p>for c = 1 to 2*n begin </p>

<p>let a := random-uniformO *n </p>

<p>let b := random-uniform()*n </p>

<p>exchange (xa, Xb) </p>

<p>endfor </p>

<p>for c = 1 to frac begin </p>

<p>let r := JA + a * random-normal0 </p>

<p>let xc := xc * r </p>

<p>endfor </p>

<p>return X 
end subroutine </p>

<p>The two generated artificial datasets differ by the </p>

<p>ratio f, the mean p, and the variance B . The first </p>

<p>dataset shown in Figure 5B was generated at constant 
a=O.l*p for all combinations of f=l/16, l/s, 114 and 
p=0.5, 1.0, 1.5. The second dataset discussed in Ta-
bles 1 and 2 was generated with constant 
con-
stant B = p, and varying f=l/256 to 1/4. Simply, the 
first dataset creates ever larger perturbations (with 
increasing f ) at ever larger distance to a=O (with in-
creasing p ) with a constant and small variance of the 
perturbation. The second dataset creates exponen-
tially increasing perturbations (with increasing f ) at 
a constant distance to a=O with a constant and large 
variance. </p>

<p>Inter-array normalization </p>

<p>(1) Median normalization, linear. Assuming sym-
metry in the fold change; after calculating the fold </p>

<p>Vol. 4 No. 2 2006 </p>

<p>
NeONORM for Inter-assay Normalization </p>

<p>changes, the median is subtracted from the log2-</p>

<p>transformed signal quotients. (2) LOWESS normal-
ization, non-linear. LOWESS is a method devel-
oped by Cleveland (33) in 1979 and since then has 
been frequently improved and modified. It was a p 
plied to microarray data analysis for the first time by 
Yang et al ( 1 1 ) in 2001. For the original method, 
four parameters have to be specified (which normally 
happens more or less arbitrarily), and changes in 
each of them lead to different results. A suggestion 
for optimized parameter selection was published by 
Berger et a1 ( 1 2 ) in 2004. LOWESS performs very 
well for poorly preprocessed data. The LOWESS </p>

<p>implementation used to compare to NeONORM 
is a <rs type="software">Java</rs> port of Cleveland's original <rs type="software">FORTRAN</rs> 
code from 1985 freely available (http://netlib.bell-
labs.com/netlib/go/lowess.f.gz), which was temporar-
ily embedded in the <rs type="software">ace.map</rs> platform for direct com-
parative testing. 
For the Median and NeONORM normalization 
methods, profiles are biased by a single additive value 
identical for all probes. LOWESS normalization is 
performed on Bland-Altman-/MA-plots and hence 
additionally uses the average of the log2-transformed 
signal values (M) corresponding to one gene and, 
roughly speaking, generates a bias function, possibly 
different for every mEM. LOWESS parameters used 
for all normalizations were: f=0.3; polynome order=l; 
iterations=2; delta=0.00001. </p>

<p>Data representation </p>

<p>Histograms and frequency plots appearing in the 
figures were generated using <rs type="software">ace.map</rs>, however, are 
standard means of data representation. The 3D-
surface plots in Figure 4 were rendered using <rs id="software-11" type="software">gnupplot</rs> 
<rs corresp="#software-11" type="version-number">4.0</rs>. Sign plots (blue = negative, red = positive) were 
rendered by an <rs type="software">ace.map</rs> plug-in. Subtraction profiles 
consist of logs-transformed quotients (logQ) of signal 
intensities for the intersection set of the probe IDS, 
which were contained in the two input sample files 
used for the subtraction. </p>

<p>Acknowledgements </p>

<p>The authors thank Annick Lesne for very helpful 
comments on this work and critically reading the 
manuscript. All other members of the systems epige-
nomics group are thanked for stimulating discus-
sions. CBcile Acquaviva is thanked for initial help 
with the cell culture of HT29 and NB4 cells. This </p>

<p> 
Geno. Prot. Bioinfo. </p>

<p>work was supported by the European Hematology 
Association-Josh Carreras Foundation, the Institut 
des Hautes Etudes Scientifiques, the Centre National 
de la Recherche Scientifique (CNRS), the Institut Na-
tional de la Sant6 Et de la Recherche MQdicale (IN-
SERM), and the French Ministry of Research through 
the "Complexit6 du Vivant-Action STICS-Sant6" 
program (all to AB). </p>

<p>Authors' contributions </p>

<p>SN has significantly participated in the mathematical 
formulation of NeONORM, the generation of artificial 
data, the statistical data analysis, and manuscript 
preparation, as well as algorithmically implemented 
all of the three normalization methods. GB has 
contributed to the algorithmic implementation of 
NeONORM and manuscript preparation. AB has sig-
nificantly participated in the mathematical formula-
tibn of NeONORM, the generation of artificial data, 
the statistical data analysis, and manuscript prepa-
ration. AB has designed and coordinated this study, 
and has acquired the experimental data. All authors 
read and approved the final manuscript. </p>

<p>Competing interests </p>

<p>The authors have declared that no competing inter-
ests exist. </p>



<p>Noth et al. </p>

<p> </p>

<p>
</p></text></tei>